@model TaskManager.WEB.ViewModels.ProjectDetailsView

@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.Title = ProjectResource.EditProject;

    var employees = ViewBag.Employees;

    var error = ViewBag.Error;
}

<h2>@ViewBag.Title</h2>

@if (error != null)
{
    <div class="alert alert-danger" role="alert">
        @error
    </div>
}

@using (Html.BeginForm(actionName: "AddOrUpdate", controllerName: "Project"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="form-group required">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = ProjectResource.NamePlaceholder } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group required">
            @Html.LabelFor(model => model.ShortName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortName, new { htmlAttributes = new { @class = "form-control", @placeholder = ProjectResource.ShortNamePlaceholder } })
                @Html.ValidationMessageFor(model => model.ShortName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = ProjectResource.DescriptionPlaceholder } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value=@CommonResource.Save class="btn btn-default" onclick="clearTempProject()" />
                @Html.ActionLink(linkText: CommonResource.Cancel, actionName: "List", routeValues: null, controllerName: "Project", htmlAttributes: new { @class = "btn" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @Html.ActionLink(linkText: IssueResource.CreateIssue, actionName: "EditRuntime", routeValues: new { id = 0 }, controllerName: "Issue", htmlAttributes: new { @class = "btn btn-primary", @onclick = "saveTempProject()" })
            </div>
        </div>
    </div>
    if (Model.IssuesOfProject != null && Model.IssuesOfProject.Any())
    {
        <div class="project-tasks">
            <table class="table">
                <tr>
                    <th>@IssueResource.Name</th>
                    <th>@IssueResource.BeginDate</th>
                    <th>@IssueResource.EndDate</th>
                    <th>@IssueResource.IssueEmployee</th>
                    <th colspan="2"></th>
                </tr>

                @foreach (var issue in Model.IssuesOfProject)
                {
                    <tr>
                        <td>@Html.DisplayFor(_ => issue.Name)</td>
                        <td>@Html.DisplayFor(_ => issue.BeginDate)</td>
                        <td>@Html.DisplayFor(_ => issue.EndDate)</td>
                        <td>@Html.DisplayFor(_ => issue.EmployeeFullName)</td>
                        <td>
                            <a href="@Url.Action(actionName: "EditRuntime", controllerName: "Issue", routeValues: new { id = (int) issue.Id })" onclick = "saveTempProject()">
                                <i class="glyphicon glyphicon-edit"></i>
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action(actionName: "DeleteRuntime", controllerName: "Issue", routeValues: new { id = (int) issue.Id })">
                                <i class="glyphicon glyphicon-trash"></i>
                            </a>
                        </td>
                    </tr>
                }

            </table>
        </div>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            @IssueResource.IssuesNotFound
        </div>
    }


}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/editproject")
}
