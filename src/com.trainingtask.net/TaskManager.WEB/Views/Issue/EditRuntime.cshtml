@model TaskManager.WEB.ViewModels.IssueEditView

@{
    ViewBag.Title = IssueResource.EditIssue;

    var issue = Model;

    var employees = ViewBag.Employees;

    var statuses = ViewBag.Statuses;
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm(actionName: "AddOrUpdateRuntime", controllerName: "Issue"))
{
<div class="form-horizontal">

    @Html.AntiForgeryToken()
    <hr />
    <input type="hidden" name="Id" value="@issue.Id" />
    <div class="form-group required">
        @Html.LabelFor(_ => _.ProjectId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.HiddenFor(_ => _.ProjectId)
            @Html.EditorFor(_ => _.ProjectId, new { htmlAttributes = new { @class="form-control", @type="text", @id="ProjectShortName", @readonly="readonly", @disabled="disabled"} })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(_ => _.Name, htmlAttributes: new { @class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(_ => _.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = IssueResource.NamePlaceholder } })
            @Html.ValidationMessageFor(_ => _.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(_ => _.Work, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(_ => _.Work, new { htmlAttributes = new { @class = "form-control", @placeholder = IssueResource.WorkPlaceholder } })
            @Html.ValidationMessageFor(_ => _.Work, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(_ => _.BeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(_ => _.BeginDate, new { htmlAttributes = new { @class = "form-control" }, @placeholder = IssueResource.BeginDatePlaceholder })
            @Html.ValidationMessageFor(_ => _.BeginDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(_ => _.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(_ => _.EndDate, new { htmlAttributes = new { @class = "form-control", @placeholder = IssueResource.EndDatePlaceholder } })
            @Html.ValidationMessageFor(_ => _.EndDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(_ => _.EmployeeId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" name="EmployeeId">
                <option hidden selected disabled>@IssueResource.IssueEmployeePlaceholder</option>
                @foreach (var employee  in employees)
                {
                    if (employee.Id == issue.EmployeeId)
                    {
                        <option selected value="@issue.EmployeeId">@employee.FullName</option>
                    }
                    else
                    {
                        <option value="@employee.Id">@employee.FullName</option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(_ => _.EmployeeId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group required">
        @Html.LabelFor(_ => _.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="form-control" name="StatusId">
                <option hidden selected disabled>@IssueResource.StatusPlaceholder</option>
                @foreach (var status in statuses)
                {
                    if (status.Key == issue.StatusId)
                    {
                        <option selected value="@status.Key">@status.Value</option>
                    }
                    else
                    {
                        <option value="@status.Key">@status.Value</option>
                    }
                }
            </select>
            @Html.ValidationMessageFor(_ => _.StatusId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <input class="btn btn-primary" type="submit" value=@CommonResource.Save />
        @Html.ActionLink(linkText: CommonResource.Cancel, actionName: "Edit", routeValues: new { id = issue.ProjectId }, controllerName: "Project", htmlAttributes: new { @class = "btn"})
    </div>
</div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/editruntimeissue")
}
